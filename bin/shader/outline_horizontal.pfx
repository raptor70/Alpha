layout (location = 0) out vec4 outOutline;
layout (location = 1) out float outOutlinePos;

layout(binding = 10) uniform sampler2D u_sTexture;
layout(binding = 11) uniform sampler2D u_sOutlinePos;

float UVDelta = 1.0/u_vResolution.x;

float DistToFloat(int _dist)
{
	return float(u_iOutlineSize + _dist)/255.0;
}

void main() 
{
	vec4 result0 = vec4(0,0,0,DistToFloat(255-u_iOutlineSize));
	float result1 = -25000.0;
	vec4 currentColor = texture(u_sTexture,v.vPixelUV);
	if(currentColor.rgb != vec3(0))
	{
		result0 = vec4(currentColor.rgb,DistToFloat(0));
		result1 = texture(u_sOutlinePos,v.vPixelUV).r;
	}
	else
	{
		for(int i=1; i<= u_iOutlineSize; i++)
		{
			// -1
			currentColor = texture(u_sTexture,v.vPixelUV-vec2(i*UVDelta,0));
			if(currentColor.rgb != vec3(0))
			{
				result0 = vec4(currentColor.rgb,DistToFloat(i));
				result1 = texture(u_sOutlinePos,v.vPixelUV-vec2(i*UVDelta,0)).r;
				break;
			}
			
			// 1
			currentColor = texture(u_sTexture,v.vPixelUV+vec2(i*UVDelta,0));
			if(currentColor.rgb != vec3(0))
			{
				result0 = vec4(currentColor.rgb,DistToFloat(-i));
				result1 = texture(u_sOutlinePos,v.vPixelUV+vec2(i*UVDelta,0)).r;
				break;
			}
		}
	}
	
	outOutline = result0;
	outOutlinePos = result1;
}